app.controller("MainController", ["$scope", "$rootScope", "$animate", "$alert", "localStorageService",function(scope, rootScope, animate, alert, localStorage) {
    "undefined" == typeof browser_old && (initRipplesWithArrive(), $(document).arrive(".navbar-toggle", function() {
        $(this).sideNav({
            menuWidth: 260,
            closeOnClick: !0
        })
    })),
    scope.theme_colors = ["pink", "red", "purple", "indigo", "blue", "light-blue", "cyan", "teal", "green", "light-green", "lime", "yellow", "amber", "orange", "deep-orange"],
    scope.changeColorTheme = function(color) {
    	scope.theme.color = color
    },
    scope.changeTemplateTheme = function(template) {
    	scope.theme.template = template
    },
    localStorage.get("theme") || (theme = {
        color: "theme-pink",
        template: "theme-template-dark"
    },
    localStorage.set("theme", theme)),
    localStorage.bind(scope, "theme");
    
    var noShowUseChromeNotifyFlag = 0;
    rootScope.noShowUseChromeNotify = function(){
    	noShowUseChromeNotifyFlag = !noShowUseChromeNotifyFlag;
    	noShowUseChromeNotifyFlag?localStorage.set("checkBrowser", 1):localStorage.remove("checkBrowser");
    }
    if(!localStorage.get("checkBrowser")) {
    	var isChrome = window.navigator.userAgent.indexOf("Chrome"), isEdge = window.navigator.userAgent.indexOf("Edge");
    	if(!(isChrome >= 0 && isEdge < 0)) alert({
    		title: "重要提示",
    		content: "为了更好的使用系统，强烈建议您使用谷歌浏览器访问。",
    		placement: "top",
    		type: "theme",
    		show: 1,
    		template: "tpl/use-chrome.jspx",
    		animation: "mat-grow-top-right"
    	});
    }
    scope.loading = false
}]),

app.controller("DashboardController", ["$rootScope", "$scope", "$aside", "$location", "localStorageService", function(rootScope, scope, aside, location, localStorageService) {
	rootScope.pageTitle = "全局监控（GIS）";
	var pumpBaseInfoForm = aside({
        scope: scope,
        template: "tpl/form-base.jspx",
        show: !1,
        placement: "left",
        backdrop: !1,
        animation: "am-slide-left"
    });
	
	scope.pump = {};

	scope.baseInfo = function(pump) {
		pumpBaseInfoForm.show(),
		scope.pump = pump.data
    }
	
	scope.pumpMonitor = function(pumpId) {
		pumpBaseInfoForm.hide();
    	localStorageService.set("pumpId", pumpId);
    	location.path("/monitor/console");
    }

	scope.$on("$destroy", function() {
		pumpBaseInfoForm.hide();
    })
}]),

app.controller("AreaController", ["$scope", "$aside", "$http", function(scope, aside, http) {
	scope.$on("$destroy", function() {
    })
}]),

app.controller("PumpController", ["$rootScope", "$scope", "$aside", "$http", function(rootScope, scope, aside, http) {
	rootScope.pageTitle = "热泵监控";
	
	manageForm = aside({
        scope: scope,
        template: "tpl/form-pump-manage.jspx",
        show: !1,
        placement: "left",
        backdrop: !1,
        animation: "am-slide-left"
    }),
    showManageForm = function() {
        angular.element(".tooltip").remove(),
        hideManageForm(),
        manageForm.show()
    },
    hideManageForm = function() {
    	manageForm.hide()
    },
	
	scope.data = [{
		id: 6500323052118231,
		name: "热泵1",
		area: "北京市朝阳区兴隆家园",
		color: "green",
		installDate: new Date(),
		statusText: "正常",
		heatingTemp: "26.3"
	},{
		id: 6500323052118232,
		name: "热泵2",
		area: "北京市朝阳区亮马河大厦",
		color: "grey",
		installDate: new Date(),
		statusText: "离线",
		heatingTemp: "26.3"
	},{
		id: 6500323052118233,
		name: "热泵3",
		area: "北京市海淀区辉煌国际",
		color: "orange",
		installDate: new Date(),
		statusText: "故障",
		heatingTemp: "26.3"
	}];
	
	scope.keyword = "";
	
    scope.pumpMonitor = function(pumpId) {
    	showManageForm()
    };
	
	scope.$on("$destroy", function() {
    })
}]),

app.controller("UserController", ["$scope", "$aside", "$http", "layerService", function(scope, aside, http, layerService) {
	http.get("auth/user-data.jspx").success(function (response) {
		scope.data = response.data;
		angular.forEach(scope.data, function(a) {
            a.selected = !1;
        })
	});
    var creatForm = aside({
        scope: scope,
        template: "tpl/form-user-create.jspx",
        show: !1,
        placement: "left",
        backdrop: !1,
        animation: "am-slide-left"
    }),
    
    updateForm = aside({
        scope: scope,
        template: "tpl/form-user-update.jspx",
        show: !1,
        placement: "left",
        backdrop: !1,
        animation: "am-slide-left"
    }),
    
    detailForm = aside({
        scope: scope,
        template: "tpl/form-user-detail.jspx",
        show: !1,
        placement: "left",
        backdrop: !1,
        animation: "am-slide-left"
    }),
    
    showCreatForm = function() {
        angular.element(".tooltip").remove(),
        hideAllForm(),
        creatForm.show()
    },
    hideCreatForm = function() {
    	creatForm.hide()
    },
    showUpdateForm = function() {
        angular.element(".tooltip").remove(),
        hideAllForm(),
        updateForm.show()
    },
    hideUpdateForm = function() {
    	updateForm.hide()
    },
    showDetailForm = function() {
        angular.element(".tooltip").remove(),
        hideAllForm(),
        detailForm.show()
    },
    hideDetailForm = function() {
    	detailForm.hide()
    },
    hideAllForm = function() {
    	creatForm.hide(),
    	updateForm.hide(),
    	detailForm.hide()
    };
    
    scope.keyword = "",
    
    scope.checkAll = function() {
        angular.forEach(scope.data, function(item) {
        	item.selected = scope.selectAll
        })
    },

    scope.create = function() {
    	http.get("auth/role-data.jspx").success(function(response) {
    		scope.roles = response.data,
            scope.user = {},
            scope.cmd = 'create',
            showCreatForm()
    	});
    },
    
    scope.save = function() {
    	scope.user.roleId = scope.roles.selected.roleId;
    	"create" === scope.cmd && http({
    		method: 'post',
    		url: 'auth/add-user.jspx',
    		data: scope.user
    	}).success(function(req) {
    		if(req.success) {
    			scope.data.push(req.user),
        		hideCreatForm()
    		} else {
    			layerService.layerAlert(req.message)
    		}
    	})
    },
    
    scope.edit = function(user) {
    	user && http.get("auth/role-data.jspx").success(function(response) {
    		scope.roles = response.data;
    		angular.forEach(scope.roles, function(role) {
    			if(role.roleId == user.roleId){
    				scope.roles.selected = role
    			}
            });
            scope.user = angular.copy(user),
            scope.cmd = 'update',
            showUpdateForm()
    	});
    },
    
    scope.update = function() {
    	"update" === scope.cmd && http({
    		method: 'post',
    		url: 'auth/change-user.jspx',
    		data: {
        		userId: scope.user.userId,
        		userName: scope.user.userName,
        		userLoginName: scope.user.userLoginName,
        		userPhone: scope.user.userPhone,
        		roleId: scope.roles.selected.roleId,
        	}
    	}).success(function(req) {
    		if(req.success) {
    			scope.data.forEach(function(user,index,arr){
				  if(user.userId == req.user.userId) {
					  arr[index] = req.user;
				  }          
				}),
        		hideUpdateForm()
    		} else {
    			layerService.layerAlert(req.message)
    		}
    	})
    },
    
    scope.toggleUserStatus = function(user) {
    	user && http({
    		method: 'post',
    		url: 'auth/toggle-user-status.jspx',
    		data: {
        		userId: user.userId,
        		userDisableStatus: user.userDisableStatus
        	}
    	}).success(function(req) {
    		if(req.success) {
    			(user.userDisableStatus = !user.userDisableStatus)
    		} else {
    			layerService.layerAlert(req.message)
    		}
    	})
    },
    
    scope.remove = function(user) {
    	user && layerService.layerConfirm("确认要删除该用户吗？", function(){
    		http({
        		method: 'post',
        		url: 'auth/delete-user.jspx',
        		data: {
            		userId: user.userId
            	}
        	}).success(function(req) {
        		if(req.success) {
        			scope.data.splice(scope.data.indexOf(user), 1),
        			layerService.layerAlert("删除成功")
        		} else {
        			layerService.layerAlert(req.message)
        		}
        	})
    	})
    },
    
    scope.removeMore = function() {
    	var userIds = [];
    	scope.data.forEach(function(user,index,arr){
		  if(user.selected) {
			  userIds.push(user.userId);
		  }
		})
		userIds.length > 0 && layerService.layerConfirm("确认要删除已选择的" + userIds.length + "个用户吗？", function(){
    		http({
        		method: 'post',
        		url: 'auth/delete-users.jspx',
        		data: userIds
        	}).success(function(req) {
        		if(req.success) {
        			layerService.layerAlert("成功删除 " + req.successCount + " 条记录，删除失败 " + req.failCount + " 条记录。" + req.failMessage)
        			scope.data = scope.data.filter(function(user) {
						return ! user.selected
					}), scope.selectAll = !1
        		} else {
        			layerService.layerAlert(req.message)
        		}
        	})
    	})
    },
    
    scope.detail = function(user) {
    	user && (http.get("auth/role-data.jspx").success(function(response) {
    		scope.roles = response.data,
    		angular.forEach(scope.roles, function(role) {
    			if(role.roleId == user.roleId){
    				user.roleName = role.roleName
    			}
            });
    		scope.user = user,
    		showDetailForm()
    	}))
    },
    
    scope.$on("$destroy", function() {
    	hideAllForm()
    })
}]),

app.controller("RoleController", ["$scope", "$aside", "$http", "layerService", function(scope, aside, http, layerService) {
    scope.keyword = "",
	http.get("auth/role-data.jspx").success(function(response) {
		scope.data = response.data
	})
	authForm = aside({
	    scope: scope,
	    template: "tpl/form-role-auth.jspx",
	    show: !1,
	    placement: "left",
	    backdrop: !1,
	    animation: "am-slide-left"
	}),
	
	showAuthForm = function() {
	    angular.element(".tooltip").remove(),hideAuthForm(),authForm.show()
	},
	hideAuthForm = function() {
		authForm.hide()
	}

    scope.auth = function(role) {
    	scope.role = role,showAuthForm()
    },
    
    scope.$on("$destroy", function() {
    	hideAuthForm()
    })
	
}]),

app.controller("ProjectController", ["$scope", "$aside", "$http", "layerService", function(scope, aside, http, layerService) {
	scope.keyword = "",scope.data=[];
	
	scope.treeOptions = {
	    nodeChildren: "children",
	    dirSelectable: true
	}
	
	http.get("manage/project-data.jspx").success(function (response) {
		scope.data = response.data;
	});

	http.get("manage/project-area-data.jspx").success(function (response) {
		scope.projectAreas = response.data;
	});

	var creatForm = aside({
        scope: scope,
        template: "tpl/form-project-create.jspx",
		show: !1,
		placement: "left",
		backdrop: !1,
		animation: "am-slide-left"
	}),
    updateForm = aside({
        scope: scope,
        template: "tpl/form-project-update.jspx",
        show: !1,
        placement: "left",
        backdrop: !1,
        animation: "am-slide-left"
    }),
    manageForm = aside({
        scope: scope,
        template: "tpl/form-project-manage.jspx",
        show: !1,
        placement: "left",
        backdrop: !1,
        animation: "am-slide-left"
    }),
    
    showCreatForm = function() {
        angular.element(".tooltip").remove(),
        hideAllForm(),
        creatForm.show()
    },
    hideCreatForm = function() {
    	creatForm.hide()
    },
    
    showUpdateForm = function() {
        angular.element(".tooltip").remove(),
        hideAllForm(),
        updateForm.show()
    },
    hideUpdateForm = function() {
    	updateForm.hide()
    },
    
    showManageForm = function() {
        angular.element(".tooltip").remove(),
        hideAllForm(),
        manageForm.show()
    },
    hideManageForm = function() {
    	manageForm.hide()
    },
    
    hideAllForm = function() {
    	creatForm.hide(),
    	updateForm.hide(),
    	manageForm.hide()
    };
    
    scope.checkAll = function() {
        angular.forEach(scope.data, function(item) {
        	item.selected = scope.selectAll
        })
    },

    scope.create = function(currentArea) {
    	http.get("auth/user-data.jspx").success(function(response) {
    		scope.currentArea = currentArea,
    		scope.users = response.data,
    		scope.types = [{"name":"居民"},{"name":"农业"},{"name":"大工业"},{"name":"商业"}],
            scope.project = {},
            scope.cmd = 'create',
            showCreatForm()
    	});
    },
    
    scope.save = function() {
    	scope.project.ownerId = scope.users.selected.userId,
    	scope.project.ownerName = scope.users.selected.userName,
    	scope.project.ownerPhoneNo = scope.users.selected.userPhone,
    	scope.project.ownerType = scope.types.selected.name,
    	scope.project.projectAreaId = scope.currentArea.projectAreaId;
    	"create" === scope.cmd && http({
    		method: 'post',
    		url: 'manage/add-project.jspx',
    		data: scope.project
    	}).success(function(req) {
    		if(req.success) {
    			scope.data.push(req.project),
        		hideCreatForm()
    		} else {
    			layerService.layerAlert(req.message)
    		}
    	})
    },
    
    scope.remove = function(project) {
		layerService.layerConfirm("确认要删除该项目吗？", function(){
			http.get("manage/delete-project.jspx?projectId=" + project.projectId).success(function (req) {
				layerService.layerAlert(req.message)
				if(req.success) {
					scope.data.splice(scope.data.indexOf(project), 1)
				}
			});
		})
	},
	
    scope.edit = function(project) {
		scope.types = [{"name":"居民"},{"name":"农业"},{"name":"大工业"},{"name":"商业"}],
		scope.types.selected = {"name":project.ownerType},
        scope.project = angular.copy(project),
        scope.cmd = 'update',
        showUpdateForm()
    },
    
    scope.update = function() {
    	scope.project.ownerType = scope.types.selected.name;
    	"update" === scope.cmd && http({
    		method: 'post',
    		url: 'manage/change-project.jspx',
    		data: scope.project
    	}).success(function(req) {
    		if(req.success) {
    			scope.data.forEach(function(project,index,arr){
				  if(project.projectId == req.project.projectId) {
					  arr[index] = req.project;
				  }          
				}),
        		hideUpdateForm()
    		} else {
    			layerService.layerAlert(req.message)
    		}
    	})
    },
    
    scope.manage = function(){
    	showManageForm();
    },
    
    scope.$on("$destroy", function() {
    	hideAllForm()
    })
	
}]),

app.controller("ProjectAreaController", ["$scope", "$http", "$aside", "layerService", function(scope, http, aside, layerService) {
	
	scope.treeOptions = {
	    nodeChildren: "children",
	    dirSelectable: true
	}
	
	http.get("manage/project-area-data.jspx").success(function (response) {
		scope.projectAreas = response.data;
	});
	
	var creatForm = aside({
        scope: scope,
        template: "tpl/form-area-create.jspx",
        show: !1,
        placement: "left",
        backdrop: !1,
        animation: "am-slide-left"
    }),
    showCreatForm = function() {
        angular.element(".tooltip").remove(),
        creatForm.show()
    },
    hideCreatForm = function() {
    	creatForm.hide()
    };
	
	scope.create = function(parentArea){
		http.get("manage/child-area-data.jspx?parentCode=" + parentArea.areaCode).success(function (response) {
			if(response.data.length>0) {
				scope.parentArea = parentArea,
				scope.childAreas = response.data,
				scope.cmd = "create",
				showCreatForm();
			} else {
				layerService.layerAlert("已无子级区域，不可再新增子级区域。<br/>扩充数据请联系管理员。")
			}
		});
	}
	
	scope.save = function() {
		var newArea = scope.childAreas.selected, area = {};
		area.areaName = newArea.areaName;
		area.areaCode = newArea.areaCode;
		area.weatherCode = newArea.areaWeatherCode;
		area.parentAreaCode = scope.parentArea.areaCode;
    	"create" === scope.cmd && http({
    		method: 'post',
    		url: 'manage/add-child-area.jspx',
    		data: area
    	}).success(function(req) {
    		if(req.success) {
    			scope.parentArea.children.push(req.area);
        		hideCreatForm()
    		} else {
    			layerService.layerAlert(req.message)
    		}
    	})
    }
	
	scope.remove = function(currentNode) {
		layerService.layerConfirm("确认要删除该区域吗？", function(){
			http.get("manage/delete-area.jspx?areaCode=" + currentNode.areaCode).success(function (req) {
				layerService.layerAlert(req.message)
				if(req.success) {
					http.get("manage/project-area-data.jspx").success(function (response) {
						scope.currentNode = null;
						scope.projectAreas = response.data;
					})
				}
			});
		})
	}
    
	scope.$on("$destroy", function() {
		hideCreatForm()
    })
}]);